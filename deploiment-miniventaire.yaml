apiVersion: v1
kind: ConfigMap
metadata:
  name: eureka-cm
data:
  eureka_service_address: localhost:8761/eureka
---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: website-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/share/testdb"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: website-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: eureka-lb
  labels:
    app: eureka
spec:
  selector:
    app: eureka
  type: LoadBalancer
  ports:
    - port: 8761
      targetPort: 8761
      nodePort: 30000
---
apiVersion: v1
kind: Service
metadata:
  name: eureka
  labels:
    app: eureka
spec:
  clusterIP: None
  ports:
    - port: 8761
      name: eureka
  selector:
    app: eureka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: eureka
spec:
  serviceName: 'eureka'
  # n instances
  replicas: 1
  selector:
    matchLabels:
      app: eureka
  template:
    metadata:
      labels:
        app: eureka
    spec:
      containers:
        - name: eureka
          image: warra29/eurekaserver:latest
          ports:
            - containerPort: 8761
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "1200Mi"
              cpu: "500m"
          env:
            - name: EUREKA_SERVER_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: eureka-cm
                  key: eureka_service_address
            - name: ENVIRONMENT
              value: "prod"
            - name: JVM_OPTS
              value: "-Xms1g -Xmx1g"


---

kind: Service
apiVersion: v1
metadata:
  name: orders-service
spec:
  selector:
    app: orders-service
  type: NodePort
  ports:
    - nodePort: 30161
      port: 80
      targetPort: 9094

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-service
  labels:
    app: orders-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders-service
  template:
    metadata:
      labels:
        app: orders-service
    spec:
      containers:
        - name: orders-service
          image: warra29/orderservice:latest
          ports:
            - containerPort: 9094
          volumeMounts:
          - mountPath: /root/h2
            name: node-pv-storage
      volumes:
      - name: node-pv-storage
        persistentVolumeClaim:
          claimName: website-pv-claim
---

  kind: Service
  apiVersion: v1
  metadata:
    name: produits-service
  spec:
    selector:
      app: produits-service
    type: NodePort
    ports:
      - nodePort: 30162
        port: 80
        targetPort: 9093
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: produits-service
  labels:
    app: produits-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: produits-service
  template:
    metadata:
      labels:
        app: produits-service
    spec:
      containers:
        - name: produits-service
          image: warra29/produitservice:latest
          ports:
            - containerPort: 9093
          volumeMounts:
          - mountPath: /root/h2
            name: node-pv-storage
      volumes:
      - name: node-pv-storage
        persistentVolumeClaim:
          claimName: website-pv-claim

---

  kind: Service
  apiVersion: v1
  metadata:
    name: sellers-service
  spec:
    selector:
      app: sellers-service
    type: NodePort
    ports:
      - nodePort: 30163
        port: 80
        targetPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sellers-service
  labels:
    app: sellers-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sellers-service
  template:
    metadata:
      labels:
        app: sellers-service
    spec:
      containers:
        - name: sellers-service
          image: warra29/sellerservice:latest
          ports:
            - containerPort: 9092
          volumeMounts:
          - mountPath: /root/h2
            name: node-pv-storage
      volumes:
      - name: node-pv-storage
        persistentVolumeClaim:
          claimName: website-pv-claim


---
apiVersion: v1
kind: Service
metadata:
  name: zuul-server
  labels:
    app: zuul-server
spec:
  ports:
    - port: 9090
      targetPort: 9090
  type: ClusterIP
  selector:
    app: zuul-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zuul-server
  labels:
    app: zuul-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: zuul-server
  template:
    metadata:
      labels:
        app: zuul-server
    spec:
      containers:
        - name: zuul-server
          image: warra29/servergateway:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 9090


---

kind: Service
apiVersion: v1
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: zuul-server
          image: warra29/front-end:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80


---


apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: front-end-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefixStrip
spec:
  rules:
  - host: backend.localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: zuul-server
          servicePort: 9090
  - host: frontend.localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /menu
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /produits
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /addProduits
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /clients
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /addClients
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /editClients/{id:[0-9]*}
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /detailsClients/{id:[0-9]*}
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /editProduits/{id:[0-9]*}
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /orders
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /detailsOrders/{id:[0-9]*}
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /addOrders
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /addSellers
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /sellers
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /editSellers/{id:[0-9]*}
        backend:
          serviceName: frontend
          servicePort: 80
  - host: registry.localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: eureka
          servicePort: 8761
  





        






